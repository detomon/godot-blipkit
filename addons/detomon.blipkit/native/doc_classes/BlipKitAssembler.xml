<?xml version="1.0" encoding="UTF-8" ?>
<class name="BlipKitAssembler" inherits="RefCounted" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		An object used for generating byte code which can be interpreted by [BlipKitInterpreter].
	</brief_description>
	<description>
		Provides instructions to modify the properties of a [BlipKitTrack].
		Named labels can be used to reuse parts (like function calls or loops).
		[b]Example:[/b] Generate instructions to play an iconic startup sound:
		[codeblocks]
		[gdscript]
		var assem := BlipKitAssembler.new()

		# Initialize track.
		assem.put(BlipKitAssembler.INSTR_WAVEFORM, BlipKitTrack.WAVEFORM_SQUARE)
		assem.put(BlipKitAssembler.INSTR_DUTY_CYCLE, 8)

		# Define a label "start" to loop back.
		assem.put_label("start")

		# Play notes.
		assem.put(BlipKitAssembler.INSTR_NOTE, float(BlipKitTrack.NOTE_C_5))
		assem.put(BlipKitAssembler.INSTR_WAIT, 18)
		assem.put(BlipKitAssembler.INSTR_NOTE, float(BlipKitTrack.NOTE_C_6))
		assem.put(BlipKitAssembler.INSTR_VOLUME_SLIDE, 162)
		assem.put(BlipKitAssembler.INSTR_VOLUME, 0.0)
		assem.put(BlipKitAssembler.INSTR_WAIT, 162)
		assem.put(BlipKitAssembler.INSTR_NOTE, float(BlipKitTrack.NOTE_RELEASE))
		assem.put(BlipKitAssembler.INSTR_VOLUME_SLIDE, 0)
		assem.put(BlipKitAssembler.INSTR_VOLUME, 1.0)
		assem.put(BlipKitAssembler.INSTR_WAIT, 180)

		# Jump back to label "start".
		assem.put(BlipKitAssembler.INSTR_JUMP, "start")

		# Compile byte code and check for errors.
		if assem.compile() != BlipKitAssembler.OK:
		    printerr(assem.get_error_message())
		    return

		# Get the byte code.
		var bytes := assem.get_byte_code()
		[/gdscript]
		[/codeblocks]
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="clear">
			<return type="void" />
			<description>
				Clears all instructions and errors.
			</description>
		</method>
		<method name="compile">
			<return type="int" enum="BlipKitAssembler.Error" />
			<description>
				Resolves label addresses and generated the byte code. Call [method get_byte_code] to get the byte code.
				Call [method clear] to generate new byte code.
			</description>
		</method>
		<method name="get_byte_code" qualifiers="const">
			<return type="PackedByteArray" />
			<description>
				Returns the generated byte code.
				Returns an empty array if [method compile] was not called yet or an error occurred.
			</description>
		</method>
		<method name="get_error_message" qualifiers="const">
			<return type="String" />
			<description>
				Returns the last error as string.
				Returns an empty string if no error occurred.
			</description>
		</method>
		<method name="put">
			<return type="int" enum="BlipKitAssembler.Error" />
			<param index="0" name="instruction" type="int" enum="BlipKitAssembler.Instruction" />
			<param index="1" name="arg_1" type="Variant" default="null" />
			<param index="2" name="arg_2" type="Variant" default="null" />
			<param index="3" name="arg_3" type="Variant" default="null" />
			<description>
				Adds an instruction and returns [constant OK] on success. See [enum Instruction] for the required arguments.
				Returns [constant ERR_INVALID_INSTRUCTION] if [param instruction] is not valid.
				Returns [constant ERR_INVALID_ARGUMENT] if the arguments are invalid for [param instruction].
			</description>
		</method>
		<method name="put_code">
			<return type="int" enum="BlipKitAssembler.Error" />
			<param index="0" name="code" type="String" />
			<description>
				Parses a string containing multiple instructions.
				Returns [constant ERR_PARSER_ERROR] if a parser error occurred.
			</description>
		</method>
		<method name="put_label">
			<return type="int" enum="BlipKitAssembler.Error" />
			<param index="0" name="label" type="String" />
			<description>
				Adds a named label at the current position which can be referenced by [constant INSTR_CALL] and [constant INSTR_JUMP] instructions.
				Returns [constant ERR_DUPLICATE_LABEL] if a label with the same name is already defined.
			</description>
		</method>
	</methods>
	<constants>
		<constant name="INSTR_NOTE" value="1" enum="Instruction">
			Sets [member BlipKitTrack.note]. Expects a [float] argument.
		</constant>
		<constant name="INSTR_WAVEFORM" value="2" enum="Instruction">
			Sets [member BlipKitTrack.waveform]. Expects [enum BlipKitTrack.Waveform] as an [int] argument.
		</constant>
		<constant name="INSTR_CUSTOM_WAVEFORM" value="3" enum="Instruction">
			Sets [member BlipKitTrack.custom_waveform] from the given slot. Expects a slot index from [code]0[/code] to [code]255[/code] as [int] argument.
			Which [BlipKitWaveform] is used is define with [member BlipKitInterpreter.set_waveform_at].
		</constant>
		<constant name="INSTR_DUTY_CYCLE" value="4" enum="Instruction">
			Sets [member BlipKitTrack.duty_cycle]. Expects an [int] argument.
		</constant>
		<constant name="INSTR_EFFECT_DIVIDER" value="5" enum="Instruction">
			Sets [member BlipKitTrack.effect_divider]. Expects an [int] argument.
		</constant>
		<constant name="INSTR_VOLUME" value="6" enum="Instruction">
			Sets [member BlipKitTrack.volume]. Expects a [float] argument.
		</constant>
		<constant name="INSTR_VOLUME_SLIDE" value="7" enum="Instruction">
			Sets [member BlipKitTrack.volume_slide]. Expects an [int] argument.
		</constant>
		<constant name="INSTR_MASTER_VOLUME" value="8" enum="Instruction">
			Sets [member BlipKitTrack.master_volume]. Expects a [float] argument.
		</constant>
		<constant name="INSTR_PANNING" value="9" enum="Instruction">
			Sets [member BlipKitTrack.panning]. Expects a [float] argument.
		</constant>
		<constant name="INSTR_PANNING_SLIDE" value="10" enum="Instruction">
			Sets [member BlipKitTrack.panning_slide]. Expects an [int] argument.
		</constant>
		<constant name="INSTR_PITCH" value="11" enum="Instruction">
			Sets [member BlipKitTrack.pitch]. Expects a [float] argument.
		</constant>
		<constant name="INSTR_PHASE_WRAP" value="12" enum="Instruction">
			Sets [member BlipKitTrack.phase_wrap]. Expects an [int] argument.
		</constant>
		<constant name="INSTR_PORTAMENTO" value="13" enum="Instruction">
			Sets [member BlipKitTrack.portamento]. Expects an [int] argument.
		</constant>
		<constant name="INSTR_VIBRATO" value="14" enum="Instruction">
			Calls [method BlipKitTrack.set_vibrato]. Expects [code]ticks[/code] ([int]), [code]delta[/code] ([float]) and [code]slide_ticks[/code] ([int]).
		</constant>
		<constant name="INSTR_TREMOLO" value="15" enum="Instruction">
			Calls [method BlipKitTrack.set_tremolo]. Expects [code]ticks[/code] ([int]), [code]delta[/code] ([float]) and [code]slide_ticks[/code] ([int]).
		</constant>
		<constant name="INSTR_ARPEGGIO" value="16" enum="Instruction">
			Sets [member BlipKitTrack.arpeggio]. Expects a [PackedFloat32Array] argument.
		</constant>
		<constant name="INSTR_ARPEGGIO_DIVIDER" value="17" enum="Instruction">
			Sets [member BlipKitTrack.arpeggio_divider]. Expects an [int] argument.
		</constant>
		<constant name="INSTR_INSTRUMENT" value="18" enum="Instruction">
			Sets [member BlipKitTrack.instrument] from the given slot. Expects a slot index from [code]0[/code] to [code]255[/code] as [int] argument.
			Which [BlipKitInstrument] used is define with [member BlipKitInterpreter.set_instrument_at].
		</constant>
		<constant name="INSTR_INSTRUMENT_DIVIDER" value="19" enum="Instruction">
			Sets [member BlipKitTrack.instrument_divider]. Expects an [int] argument.
		</constant>
		<constant name="INSTR_WAIT" value="20" enum="Instruction">
			Waits for a number of [i]ticks[/i]. Expects an [int] argument.
		</constant>
		<constant name="INSTR_CALL" value="21" enum="Instruction">
			Calls a named label like a function. Expects a label name as [String] argument.
			[b]Note:[/b] The label is not required to be defined at this point and can also be set later.
		</constant>
		<constant name="INSTR_RETURN" value="22" enum="Instruction">
			Returns from a function call made with [constant INSTR_CALL]. Expects no arguments.
		</constant>
		<constant name="INSTR_JUMP" value="23" enum="Instruction">
			Jumps to a named label. Expects the label name as [String] argument.
		</constant>
		<constant name="INSTR_RESET" value="24" enum="Instruction">
			Calls [method BlipKitTrack.reset]. Expects no arguments.
		</constant>
		<constant name="INSTR_SET_REG" value="25" enum="Instruction">
			Sets a value in a register. Expects the register number as [int] argument and the value as [int] argument. The register number is a value between [code]0[/code] and [code]15[/code].
		</constant>
		<constant name="OK" value="0" enum="Error">
			No error.
		</constant>
		<constant name="ERR_INVALID_INSTRUCTION" value="1" enum="Error">
			An invalid instruction was provided.
		</constant>
		<constant name="ERR_INVALID_ARGUMENT" value="2" enum="Error">
			An invalid argument was provided.
		</constant>
		<constant name="ERR_DUPLICATE_LABEL" value="3" enum="Error">
			A named label already exists with the same name.
		</constant>
		<constant name="ERR_UNDEFINED_LABEL" value="4" enum="Error">
			A named label was not defined with the given name.
		</constant>
		<constant name="ERR_PARSER_ERROR" value="5" enum="Error">
		</constant>
	</constants>
</class>
