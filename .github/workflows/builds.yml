name: Build GDExtension
on:
  workflow_dispatch:
    inputs:
      make_pull_request:
        description: 'Whether to create a pull request after building'
        default: false
        required: true
        type: boolean

env:
  BRANCH: ${{ github.ref }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        # Debug templates
          - platform: linux
            float-precision: single
            arch: x86_64
            target-type: template_debug
            os: ubuntu-latest

          - platform: windows
            float-precision: single
            arch: x86_32
            target-type: template_debug
            os: windows-latest

          - platform: windows
            float-precision: single
            arch: x86_64
            target-type: template_debug
            os: windows-latest

          - platform: macos
            float-precision: single
            arch: universal
            target-type: template_debug
            os: macos-latest

          - platform: android
            float-precision: single
            arch: arm64
            target-type: template_debug
            os: ubuntu-latest

          - platform: android
            float-precision: single
            arch: arm32
            target-type: template_debug
            os: ubuntu-latest

          - platform: android
            float-precision: single
            arch: x86_64
            target-type: template_debug
            os: ubuntu-latest

          - platform: android
            float-precision: single
            arch: x86_32
            target-type: template_debug
            os: ubuntu-latest

          - platform: ios
            float-precision: single
            arch: arm64
            target-type: template_debug
            os: macos-latest

          - platform: web
            float-precision: single
            arch: wasm32
            target-type: template_debug
            os: ubuntu-latest

        # Release templates
          - platform: linux
            float-precision: single
            arch: x86_64
            target-type: template_release
            os: ubuntu-latest

          - platform: windows
            float-precision: single
            arch: x86_32
            target-type: template_release
            os: windows-latest

          - platform: windows
            float-precision: single
            arch: x86_64
            target-type: template_release
            os: windows-latest

          - platform: macos
            float-precision: single
            arch: universal
            target-type: template_release
            os: macos-latest

          - platform: android
            float-precision: single
            arch: arm64
            target-type: template_release
            os: ubuntu-latest

          - platform: android
            float-precision: single
            arch: arm32
            target-type: template_release
            os: ubuntu-latest

          - platform: android
            float-precision: single
            arch: x86_64
            target-type: template_release
            os: ubuntu-latest

          - platform: android
            float-precision: single
            arch: x86_32
            target-type: template_release
            os: ubuntu-latest

          - platform: ios
            float-precision: single
            arch: arm64
            target-type: template_release
            os: macos-latest

          - platform: web
            float-precision: single
            arch: wasm32
            target-type: template_release
            os: ubuntu-latest

        # Double precision templates
        # Double precision debug templates
          # - platform: linux
          #   float-precision: double
          #   arch: x86_64
          #   target-type: template_debug
          #   os: ubuntu-latest

          # - platform: windows
          #   float-precision: double
          #   arch: x86_32
          #   target-type: template_debug
          #   os: windows-latest

          # - platform: windows
          #   float-precision: double
          #   arch: x86_64
          #   target-type: template_debug
          #   os: windows-latest

          # - platform: macos
          #   float-precision: double
          #   arch: universal
          #   target-type: template_debug
          #   os: macos-latest

          # - platform: android
          #   float-precision: double
          #   arch: arm64
          #   target-type: template_debug
          #   os: ubuntu-latest

          # - platform: android
          #   float-precision: double
          #   arch: arm32
          #   target-type: template_debug
          #   os: ubuntu-latest

          # - platform: android
          #   float-precision: double
          #   arch: x86_64
          #   target-type: template_debug
          #   os: ubuntu-latest

          # - platform: android
          #   float-precision: double
          #   arch: x86_32
          #   target-type: template_debug
          #   os: ubuntu-latest

          # - platform: ios
          #   float-precision: double
          #   arch: arm64
          #   target-type: template_debug
          #   os: macos-latest

          # - platform: web
          #   float-precision: double
          #   arch: wasm32
          #   target-type: template_debug
          #   os: ubuntu-latest

        # Double precision release templates
          # - platform: linux
          #   float-precision: double
          #   arch: x86_64
          #   target-type: template_release
          #   os: ubuntu-latest

          # - platform: windows
          #   float-precision: double
          #   arch: x86_32
          #   target-type: template_release
          #   os: windows-latest

          # - platform: windows
          #   float-precision: double
          #   arch: x86_64
          #   target-type: template_release
          #   os: windows-latest

          # - platform: macos
          #   float-precision: double
          #   arch: universal
          #   target-type: template_release
          #   os: macos-latest

          # - platform: android
          #   float-precision: double
          #   arch: arm64
          #   target-type: template_release
          #   os: ubuntu-latest

          # - platform: android
          #   float-precision: double
          #   arch: arm32
          #   target-type: template_release
          #   os: ubuntu-latest

          # - platform: android
          #   float-precision: double
          #   arch: x86_64
          #   target-type: template_release
          #   os: ubuntu-latest

          # - platform: android
          #   float-precision: double
          #   arch: x86_32
          #   target-type: template_release
          #   os: ubuntu-latest

          # - platform: ios
          #   float-precision: double
          #   arch: arm64
          #   target-type: template_release
          #   os: macos-latest

          # - platform: web
          #   float-precision: double
          #   arch: wasm32
          #   target-type: template_release
          #   os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}
          submodules: true

      # # Lint
      #- name: Setup clang-format
      #  shell: bash
      #  run: |
      #    python -m pip install clang-format
      #- name: Run clang-format
      #  shell: bash
      #  run: |
      #    clang-format src/** --dry-run --Werror

      # Build
      - name: ðŸ”— GDExtension Debug Build
        uses: ./.github/actions/build
        with:
          platform: ${{ matrix.platform }}
          arch: ${{ matrix.arch }}
          float-precision: ${{ matrix.float-precision }}
          build-target-type: ${{ matrix.target-type }}

      # Sign
      - name: Mac/iOS Sign
        # Disable sign if secrets are not set
        if: ${{ matrix.platform == 'macos' && env.APPLE_CERT_BASE64 }}
        env:
          APPLE_CERT_BASE64: ${{ secrets.APPLE_CERT_BASE64 }}
        uses: ./.github/actions/sign
        with:
          FRAMEWORK_PATH: bin/${{ matrix.platform }}/libblipkit.${{ matrix.platform }}.${{ matrix.target-type }}.${{ matrix.arch }}.framework
          SIGN_FLAGS: --deep
          APPLE_CERT_BASE64: ${{ secrets.APPLE_CERT_BASE64 }}
          APPLE_CERT_PASSWORD: ${{ secrets.APPLE_CERT_PASSWORD }}
          APPLE_DEV_PASSWORD: ${{ secrets.APPLE_DEV_PASSWORD }}
          APPLE_DEV_ID: ${{ secrets.APPLE_DEV_ID }}
          APPLE_DEV_TEAM_ID: ${{ secrets.APPLE_DEV_TEAM_ID }}
          APPLE_DEV_APP_ID: ${{ secrets.APPLE_DEV_APP_ID }}

      # Windows.
      - name: Windows - Delete compilation files
        if: ${{ matrix.platform == 'windows' }}
        shell: pwsh
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      # Upload artifact.
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-blipkit-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}
          path: |
            ${{ github.workspace }}/bin/**

  # Merges all the build artifacts together into a single godot-blipkit artifact.
  # If you comment out this step, all the builds will be uploaded individually.
  merge:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ inputs.make_pull_request }}

    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: godot-blipkit
          pattern: godot-blipkit-*
          delete-merged: true

  # Make pull request.
  pull-request:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: build
    env:
      bin-path: ./addons/detomon.blipkit/bin
    if: ${{ inputs.make_pull_request }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}
          submodules: false

      - name: Store the revision
        id: revision
        run: |
          hash=$(git rev-parse HEAD)
          hash_short=$(git rev-parse --short HEAD)
          echo "rev_hash=$hash" >> $GITHUB_OUTPUT
          echo "rev_hash_short=$hash_short" >> $GITHUB_OUTPUT

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: godot-blipkit-*
          path: ./addons/detomon.blipkit/bin
          merge-multiple: true

      - name: Submit pull request
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: |
            Update binaries from branch ${{ env.BRANCH }} (${{ steps.revision.outputs.rev_hash_short }})
          branch: build/bin-${{ steps.revision.outputs.rev_hash_short }}
          add-paths: '${{ env.bin-path }}'
          delete-branch: true
          title: 'Update binaries from branch ${{ env.BRANCH }} (${{ steps.revision.outputs.rev_hash_short }})'
          body: |
            Update binaries from https://github.com/${{ github.repository }}/commit/${{ steps.revision.outputs.rev_hash }} (`${{ env.BRANCH }}`).
          labels: 'enhancement'
